steps:
  - name: 'python:3.10'
    id: Install & Test
    entrypoint: bash
    args: ['-c', 'pip install -r requirements.txt && pytest && flake8 app.py']

  - name: 'gcr.io/cloud-builders/docker'
    id: Build Image
    args:
      - build
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA'
      - .

  - name: 'gcr.io/cloud-builders/docker'
    id: Push Image
    args:
      - push
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA'

  - name: 'hashicorp/terraform:1.7.5'
    id: Terraform Apply for all envs
    entrypoint: bash
    dir: terraform
    args:
      - -c
      - |
          terraform init
          terraform apply -auto-approve -var="env=dev" -var="image_url=us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA"
          terraform apply -auto-approve -var="env=staging" -var="image_url=us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA"
          terraform apply -auto-approve -var="env=prod" -var="image_url=us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA"

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy via Cloud Deploy
    entrypoint: bash
    args:
      - -c
      - |
          gcloud deploy releases create release-$BUILD_ID \
            --delivery-pipeline=flask-pipeline \
            --region=us-central1 \
            --images=flask-app=us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-repo/flask-image:$COMMIT_SHA'

timeout: 1200s
